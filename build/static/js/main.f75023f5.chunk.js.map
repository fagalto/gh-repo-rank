{"version":3,"sources":["Store/types.tsx","Components/Loading/Loading.tsx","Store/reducers.tsx","Store/actions.tsx","DataSource/Data.tsx","DataSource/LocalMemoryManager.tsx","Store/async-actions.tsx","Store/store.tsx","Components/List/Member.tsx","Components/Menu/Menu.tsx","Components/List/ListHeader.tsx","Components/List/List.tsx","Components/Repository/EmptyRepository.tsx","Components/Repository/RepositoryDetails.tsx","Components/Repository/RepositoryChip.tsx","Components/MemberDetails/MemberDetailsComponent.tsx","Components/MemberDetails/MemberDetails.tsx","Components/MemberDetails/EmptyMember.tsx","Components/MemberDetails/MemberContainer.tsx","App.tsx","Themes/Theme.tsx","index.tsx"],"names":["FetchDataActions","Loading","className","viewHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","init","data","memberData","isLoading","error","memberRepos","memberToView","repoDetails","communityName","sortedBy","name","desc","reposAreLoading","repoIsLoading","loadingProgress","bufferedProgress","author","exDataFetched","action","FETCH_EX_DATA_SUCCESS","membersDataFetched","FETCH_MEMBERS_DATA_SUCCESS","reposFetchStart","REPOS_FETCH_START","limiter","Bottleneck","maxConcurrent","minTime","auth","createAppAuth","appId","privateKey","clientId","process","clientSecret","communityEndpoint","community","connectOptions","referrerPolicy","method","mode","getMember","url","getDataSimple","getData","options","a","type","authorization","options2","fetchOptions","urlPageEnhanced","response","schedule","fetchPaginate","fetch","getMembersFromlocalStorage","membersDetailsInLocal","getItemFromStorage","putItemToLocalStorage","keyName","item","putItemToStorage","getItemFromlocalStorage","localStorage","setItem","JSON","stringify","ret","getItem","parse","fetchCommunityData","dispatch","FETCH_EX_DATA_STARTED","localCommunity","getCommunity","then","res","items","reducedData","map","elem","id","login","events_url","avatar_url","catch","err","FETCH_EX_DATA_ERROR","fetchRepos","member","replace","REPOS_FETCHED","reposFetched","REPOS_FETCH_ERROR","setMembersDetailsFromLocal","communityData","SET_MEMBERS_FROM_LOCAL","fetchRepoDetails","repoUrl","REPO_FETCH_START","json","REPO_FETCHED","singleRepoFetched","REPO_FETCH_ERROR","fetchReposFromLocal","repos","console","log","SET_REPOS_FROM_LOCAL","setReposFromLocalMemory","fetchAllMembersDetails","FETCH_MEMBERS_DATA_STARTED","parseNum","doubtIfItsNumber","len","length","elems","index","percent","ceil","eventsLink","cachedEvents","Promise","resolve","val","SET_LOADING_BUFFERED","setLoadingBuffered","total_contributions","total_ReposAndGists","public_repos","public_gists","local","dataInStorage","push","pushItemToLocalStorage","SET_LOADING_PERCENT","setLoadingPercent","all","FETCH_MEMBERS_DATA_ERROR","setMemberToViewDetails","SET_MEMBERS_TO_VIEW","setMemberToView","setSortedCommunity","sortedCommunity","SET_SORTED_COMMUNITY","setSortedCommunityInState","refreshData","clear","REFRESH_DATA_FROM_API","location","reload","getAuthor","FETCH_AUTHOR_STARTED","user","FETCH_AUTHOR_SUCCESS","FETCH_AUTHOR_ERROR","store","createStore","combineReducers","filter","state","fd","payload","FETCH_MEMBER_DATA_SUCCESS","newMembers","slice","mapStateToProps","mapDispatcherToProps","asyncactions","getDatafromMemory","setMembertoDetailedView","fetchRepositories","setRepoToDetailedView","setSortedArray","sorted","connectToStore","component","connect","props","reposAndGists","userProps","icons","icon","tooltip","followers","iconset","Tooltip","title","arrow","Chip","size","variant","label","Skeleton","Object","keys","onClick","Card","sx","cursor","color","display","alignItems","CardMedia","height","width","image","CardContent","padding","flexDirection","justifyContent","Typography","Stack","direction","React","anchorEl","setAnchorEl","open","Boolean","handleClose","useEffect","IconButton","undefined","event","currentTarget","Menu","onClose","MenuListProps","MenuList","MenuItem","ListItemIcon","fontSize","ListItemText","prevSort","barTitle","progresBar","Box","LinearProgress","value","valueBuffer","sorter","entries","contributions","key","order","sort","propertyName","descending","sortOrder","b","dynamicSort","handleClick","types","itemSize","itemCount","overscanCount","prop","style","rowData","Member","EmptyRepository","gutterBottom","repo","mb","full_name","description","language","spacing","watchers","forks","Button","href","html_url","repositoryUrl","clickable","MemberComponent","repoProp","animation","maxHeight","overflowY","noWrap","company","bio","flex","Divider","useState","setData","storedRepos","fetchData","filterRepositories","repositories","array","findIndex","memberprops","EmptyMember","dataFromApiRequired","communityFetchStarted","userDetailsStarted","dt","membersDetails","fetchDataFromLocalStorage","diff","some","memberElem","fetchUsers","Container","maxWidth","Grid","container","paddingTop","xs","md","List","defaultTheme","createTheme","palette","primary","main","secondary","warning","info","ReactDOM","render","ThemeProvider","theme","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.f75023f5.chunk.js","sourcesContent":["import { ActionType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\n\r\n//only to store anv view member list.\r\nexport interface slimUser {\r\n  login: string;\r\n  id: number;\r\n  events_url: string;\r\n  url: string;\r\n  avatar_url: string;\r\n}\r\n\r\nexport interface userObject {\r\n  login: string;\r\n  id: number;\r\n  node_id?: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n  //\r\n}\r\n\r\nexport interface userDetailInfo extends userObject {\r\n  name?: string;\r\n  company?: string;\r\n  blog?: string;\r\n  location?: string;\r\n  email?: string;\r\n  hireable?: string;\r\n  bio?: string;\r\n  twitter_username?: string;\r\n  public_repos?: number;\r\n  public_gists?: number;\r\n  followers?: number;\r\n  following?: number;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  total_contributions?: number;\r\n  total_ReposAndGists?: number;\r\n}\r\nexport interface repoEvent {\r\n  repo: repo;\r\n}\r\n\r\nexport interface repo {\r\n  id: number;\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nexport const userDisplayedData = [\"login\", \"avatar_url\", \"contributions\", \"followers\", \"repos_url\"];\r\n\r\nexport enum FetchDataActions {\r\n  FETCH_EX_DATA_STARTED = \"FETCH_EX_DATA_STARTED\",\r\n  FETCH_EX_DATA_SUCCESS = \"FETCH_EX_DATA_SUCCESS\",\r\n  FETCH_EX_DATA_ERROR = \"FETCH_EX_DATA_ERROR\",\r\n  FETCH_MEMBERS_DATA_STARTED = \"FETCH_MEMBERS_DATA_STARTED\",\r\n  FETCH_MEMBERS_DATA_SUCCESS = \"FETCH_MEMBERS_DATA_SUCCESS\",\r\n  FETCH_MEMBERS_DATA_ERROR = \"FETCH_MEMBERS_DATA_ERROR\",\r\n  FETCH_MEMBER_DATA_STARTED = \"FETCH_MEMBER_DATA_STARTED\",\r\n  FETCH_MEMBER_DATA_SUCCESS = \"FETCH_MEMBER_DATA_SUCCESS\",\r\n  FETCH_MEMBER_DATA_ERROR = \"FETCH_MEMBER_DATA_ERROR\",\r\n  SET_MEMBERS_FROM_LOCAL = \"SET_MEMBERS_FROM_LOCAL\",\r\n  SET_MEMBERS_TO_VIEW = \"SET_MEMBERS_TO_VIEW\",\r\n  REPOS_FETCH_START = \"REPOS_FETCH_START\",\r\n  REPOS_FETCHED = \"REPOS_FETCHED\",\r\n  REPOS_FETCH_ERROR = \"REPOS_FETCH_ERROR\",\r\n  SET_REPOS_FROM_LOCAL = \"SET_REPOS_FROM_LOCAL\",\r\n\r\n  REPO_FETCH_START = \"REPO_FETCH_START\",\r\n  REPO_FETCHED = \"REPO_FETCHED\",\r\n  REPO_FETCH_ERROR = \"REPO_FETCH_ERROR\",\r\n  SET_SORTED_COMMUNITY = \"SET_SORTED_COMMUNITY\",\r\n  SET_LOADING_PERCENT = \"SET_LOADING_PERCENT\",\r\n  SET_LOADING_BUFFERED = \"SET_LOADING_BUFFERED\",\r\n  REFRESH_DATA_FROM_API = \"REFRESH_DATA_FROM_API\",\r\n\r\n  FETCH_AUTHOR_STARTED = \"FETCH_AUTHOR_STARTED\",\r\n  FETCH_AUTHOR_SUCCESS = \"FETCH_AUTHOR_SUCCESS\",\r\n  FETCH_AUTHOR_ERROR = \"FETCH_AUTHOR_ERROR\",\r\n}\r\n\r\nexport type filterActions = ActionType<typeof actions>;\r\n\r\nexport interface filterState {\r\n  communityName: string;\r\n  data: slimUser[];\r\n  memberData: userDetailInfo[];\r\n  isLoading: boolean;\r\n  loadingProgress: number;\r\n  bufferedProgress: number;\r\n  error: any;\r\n  memberToView: userDetailInfo | string;\r\n  memberRepos: any;\r\n  repoDetails: any;\r\n  sortedBy: sortedBy;\r\n  reposAreLoading: boolean;\r\n  repoIsLoading: boolean;\r\n  author: userDetailInfo | null;\r\n}\r\nexport interface sortedBy {\r\n  name: string;\r\n  desc: boolean;\r\n}\r\nexport interface RootState {\r\n  filter: filterState;\r\n}\r\n\r\nexport interface GitRepo {\r\n  id: number;\r\n  node_id: string;\r\n  name: string;\r\n  full_name: string;\r\n  private: boolean;\r\n  owner: userDetailInfo;\r\n  html_url: string;\r\n  description: string;\r\n  fork: boolean;\r\n  url: string;\r\n\r\n  homepage: string;\r\n  stargazers_count: number;\r\n  watchers_count: number;\r\n  language: string;\r\n  forks: number;\r\n  open_issues: number;\r\n  watchers: number;\r\n}\r\nexport const viewHeight = Math.max(\r\n  document.documentElement.clientHeight || 0,\r\n  window.innerHeight || 0\r\n);\r\n","import \"./Loading.css\";\r\n\r\nconst Loading = () => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Loading;\r\n","import { FetchDataActions as fd, filterState, filterActions } from \"./types\";\r\n\r\nconst init: filterState = {\r\n  data: [],\r\n  memberData: [],\r\n  isLoading: false,\r\n  error: null,\r\n  memberRepos: [],\r\n  memberToView: \"\",\r\n  repoDetails: [],\r\n  communityName: \"reactjs\",\r\n  sortedBy: { name: \"\", desc: false },\r\n  reposAreLoading: false,\r\n  repoIsLoading: false,\r\n  loadingProgress: 0,\r\n  bufferedProgress: 0,\r\n  author: null\r\n};\r\n\r\nexport const filterReducer = (state: filterState = init, action: filterActions): filterState => {\r\n  switch (action.type) {\r\n    case fd.FETCH_EX_DATA_STARTED:\r\n      return { ...state, isLoading: true, data: [], error: null };\r\n    case fd.FETCH_EX_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n        isLoading: false,\r\n        bufferedProgress: 0,\r\n        loadingProgress: 0,\r\n        error: null,\r\n        memberToView: \"\",\r\n      };\r\n    case fd.FETCH_EX_DATA_ERROR:\r\n      console.log(\"Error fetch\", action.payload.error);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload.error,\r\n        bufferedProgress: 0,\r\n        loadingProgress: 0,\r\n      };\r\n\r\n    case fd.FETCH_MEMBERS_DATA_STARTED:\r\n      return { ...state, isLoading: true };\r\n    case fd.FETCH_MEMBERS_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loadingProgress: 0,\r\n        bufferedProgress: 0,\r\n        memberData: action.payload.data,\r\n        data: action.payload.data,\r\n      };\r\n    case fd.FETCH_MEMBER_DATA_SUCCESS:\r\n      const newMembers = state.memberData.slice();\r\n      newMembers.push(action.payload.data);\r\n\r\n      return {\r\n        ...state,\r\n        memberData: newMembers,\r\n        data: newMembers,\r\n      };\r\n    case fd.FETCH_MEMBERS_DATA_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        isLoading: false,\r\n        loadingProgress: 0,\r\n        bufferedProgress: 0,\r\n      };\r\n    case fd.SET_MEMBERS_FROM_LOCAL:\r\n      return { ...state, data: action.payload.data, memberData: action.payload.data };\r\n    case fd.SET_MEMBERS_TO_VIEW:\r\n      return { ...state, memberToView: action.payload.data };\r\n    case fd.REPOS_FETCH_START:\r\n      return { ...state, reposAreLoading: true };\r\n    case fd.REPOS_FETCHED:\r\n      return {\r\n        ...state,\r\n        memberRepos: { ...state.memberRepos, [action.payload.member.login]: action.payload.data },\r\n        reposAreLoading: false,\r\n      };\r\n    case fd.REPO_FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case fd.REPO_FETCH_START:\r\n      return { ...state, repoIsLoading: true };\r\n    case fd.REPO_FETCHED:\r\n      return {\r\n        ...state,\r\n        repoDetails: action.payload.data,\r\n        repoIsLoading: false,\r\n      };\r\n    case fd.REPOS_FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        repoIsLoading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case fd.SET_REPOS_FROM_LOCAL:\r\n      return { ...state, memberRepos: action.payload.data, reposAreLoading: false };\r\n    case fd.SET_SORTED_COMMUNITY:\r\n      return { ...state, memberData: action.payload.data, sortedBy: action.payload.sortedBy };\r\n    case fd.SET_LOADING_PERCENT:\r\n      return { ...state, loadingProgress: action.payload.data };\r\n    case fd.SET_LOADING_BUFFERED:\r\n      return { ...state, bufferedProgress: action.payload.data };\r\n    case fd.REFRESH_DATA_FROM_API:\r\n      return { ...state, data: [], memberData: [] };\r\n    case fd.FETCH_AUTHOR_SUCCESS: {\r\n      return { ...state, author: action.payload.data };\r\n    }\r\n    case fd.FETCH_AUTHOR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { action } from \"typesafe-actions\";\r\nimport { FetchDataActions, userDetailInfo, repoEvent, sortedBy, slimUser } from \"./types\";\r\n\r\nexport const exDataFetched = (data: slimUser[]) => {\r\n  return action(FetchDataActions.FETCH_EX_DATA_SUCCESS, { data: data });\r\n};\r\nexport const exDataFetchStart = () => {\r\n  return action(FetchDataActions.FETCH_EX_DATA_STARTED, {});\r\n};\r\nexport const exDataFetchError = (error: any) => {\r\n  return action(FetchDataActions.FETCH_EX_DATA_ERROR, {\r\n    error,\r\n  });\r\n};\r\n\r\nexport const membersDataFetched = (data: userDetailInfo[]) => {\r\n  return action(FetchDataActions.FETCH_MEMBERS_DATA_SUCCESS, {\r\n    data: data,\r\n  });\r\n};\r\nexport const membersDataFetchStart = () => {\r\n  return action(FetchDataActions.FETCH_MEMBERS_DATA_STARTED, { });\r\n};\r\nexport const membersDataFetchError = (error: any) => {\r\n  return action(FetchDataActions.FETCH_MEMBERS_DATA_ERROR, {\r\n    error,\r\n  });\r\n};\r\nexport const memberDataFetched = (data: userDetailInfo) => {\r\n  return action(FetchDataActions.FETCH_MEMBER_DATA_SUCCESS, {\r\n    data: data,\r\n  });\r\n};\r\nexport const memberDataFetchStart = () => {\r\n  return action(FetchDataActions.FETCH_MEMBER_DATA_STARTED, {});\r\n};\r\nexport const memberDataFetchError = (error: any) => {\r\n  return action(FetchDataActions.FETCH_MEMBER_DATA_ERROR, {\r\n    error,\r\n  });\r\n};\r\nexport const setMembersFromLocal = (data: userDetailInfo[]) => {\r\n  return action(FetchDataActions.SET_MEMBERS_FROM_LOCAL, {\r\n    data: data,\r\n  });\r\n};\r\nexport const setReposFromLocalMemory = (repos: repoEvent[]) => {\r\n  return action(FetchDataActions.SET_REPOS_FROM_LOCAL, {\r\n    data: repos,\r\n  });\r\n};\r\nexport const setMemberToView = (member: userDetailInfo) => {\r\n    return action(FetchDataActions.SET_MEMBERS_TO_VIEW, {\r\n      data: member,\r\n    });\r\n}\r\nexport const reposFetchStart = () => {\r\n      return action(FetchDataActions.REPOS_FETCH_START, {\r\n      });\r\n  \r\n}\r\nexport const reposFetched = (data: repoEvent[], member:userDetailInfo) => {\r\n        return action(FetchDataActions.REPOS_FETCHED, {data:data, member:member});\r\n};\r\nexport const reposFetchError = (error: any) => {\r\n    return action(FetchDataActions.REPOS_FETCH_ERROR, { error: error });\r\n};\r\n\r\nexport const singleRepoFetchStart = () => {\r\n  return action(FetchDataActions.REPO_FETCH_START, {});\r\n};\r\nexport const singleRepoFetched = (data: any) => {\r\n  return action(FetchDataActions.REPO_FETCHED, { data: data });\r\n};\r\nexport const singleRepoFetchError = (error: any) => {\r\n  return action(FetchDataActions.REPO_FETCH_ERROR, { error: error });\r\n};\r\n;\r\n\r\nexport const setSortedCommunityInState = (community: userDetailInfo[],item:sortedBy) => {\r\n  return action(FetchDataActions.SET_SORTED_COMMUNITY, { data: community,sortedBy:item });\r\n};\r\nexport const setLoadingPercent = (percent: number) => {\r\n  return action(FetchDataActions.SET_LOADING_PERCENT,{data:percent})\r\n}\r\nexport const setLoadingBuffered = (percent: number) => {\r\n  return action(FetchDataActions.SET_LOADING_BUFFERED, { data: percent });\r\n};\r\n;\r\nexport const refreshDatafromApi = () => {\r\n  return action(FetchDataActions.REFRESH_DATA_FROM_API, {});\r\n};\r\nexport const authorFetchStarted = () => {\r\n  return action(FetchDataActions.FETCH_AUTHOR_STARTED, { });\r\n};\r\nexport const authorFetched = (user: userDetailInfo) => {\r\n  return action(FetchDataActions.FETCH_AUTHOR_SUCCESS, {data: user});\r\n};\r\nexport const authorFetchError = (error: any) => {\r\n  return action(FetchDataActions.FETCH_AUTHOR_ERROR, {\r\n    error,\r\n  });\r\n};","import { createAppAuth } from \"@octokit/auth-app\";\r\nimport { fetchPaginate } from \"fetch-paginate\";\r\nimport Bottleneck from \"bottleneck\";\r\n\r\n\r\n/*althoug request limit is 5000 per hour, it was tested that normal use of app  youc an set much more, because not all queries count as 1 request.\r\nloading all details of reactjs community takes litlle more then 100 requests\r\n*/\r\nconst MAX_REQUESTS_PER_HOUR = 40000;\r\n\r\nconst limiter = new Bottleneck({\r\n  maxConcurrent: 1,\r\n  minTime: 3600000 / MAX_REQUESTS_PER_HOUR,\r\n});\r\n\r\nexport const auth = createAppAuth({\r\n  appId: 1,\r\n  privateKey: \"-----BEGIN PRIVATE KEY-----\\n...\",\r\n  clientId: process.env.REACT_APP_CLIENT_ID,\r\n  clientSecret: process.env.REACT_APP_CLIENT_SECRET,\r\n});\r\n\r\nexport const communityEndpoint = (community: string = \"reactjs\") => {\r\n  return `https://api.github.com/orgs/${community}/members`;\r\n};\r\nexport const connectOptions = {\r\n  referrerPolicy: \"strict-origin-when-cross-origin\",\r\n  method: \"GET\",\r\n  mode: \"no-cors\",\r\n};\r\n\r\nexport const getCommunity = (community: string = \"reactjs\") => {\r\n  return getData(communityEndpoint(community), connectOptions);\r\n};\r\nexport const getMember = (url: string) => {\r\n  return getDataSimple(url, connectOptions);\r\n};\r\n\r\n\r\n\r\nexport async function getData(url: string, options: object) {\r\n  const authorization = await auth({ type: \"oauth-app\" });\r\n  const options2 = {\r\n    fetchOptions: authorization,\r\n    ...options,\r\n  };\r\n  const urlPageEnhanced = url + \"?per_page=100\";\r\n  // data from api is often expected to be paginated. paginated request are scheduled to not overuse request limits\r\n  const response = limiter.schedule(() => fetchPaginate(urlPageEnhanced, options2));\r\n  return await response;\r\n}\r\n\r\n//some resources are not expoected to require pagination, such as single member or repo\r\nexport async function getDataSimple(url: string, options: object) {\r\n  const authorization = await auth({ type: \"oauth-app\" });\r\n\r\n  return await limiter.schedule(() => fetch(url, authorization));\r\n}\r\n","import { userDetailInfo } from \"../Store/types\";\r\n\r\nexport const getMembersFromlocalStorage = (communityName: string) => {\r\n  const membersDetailsInLocal = getItemFromStorage(\"membersDetails_\" + communityName);\r\n  const empty: userDetailInfo[] = [];\r\n  const membersDetails =\r\n    membersDetailsInLocal !==\"\"? (membersDetailsInLocal as userDetailInfo[]) : empty;\r\n  return membersDetails;\r\n};\r\n\r\nexport const putItemToLocalStorage = (keyName: string, item: any) => {\r\n  putItemToStorage(keyName, item);\r\n};\r\nexport const pushItemToLocalStorage = (keyName: string, item: any) => {\r\n  const local = getItemFromStorage(keyName);\r\n  const dataInStorage = local == \"\" ? [] : (local as any[]);\r\n  dataInStorage.push(item);\r\n  putItemToStorage(keyName, dataInStorage);\r\n};\r\nexport const getItemFromlocalStorage = (keyName: string) => getItemFromStorage(keyName);\r\n\r\nexport const clearLocalSorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\n///change below methods to switch to another kind of storage\r\n\r\nconst putItemToStorage = (keyName: string, data: any) => {\r\n  localStorage.setItem(keyName, JSON.stringify(data));\r\n};\r\nconst getItemFromStorage = (keyName: string) => {\r\n  const ret = localStorage.getItem(keyName);\r\n\r\n  return ret !== null ? JSON.parse(ret) : \"\";\r\n};\r\n","import { Dispatch } from \"redux\";\r\n\r\nimport {\r\n  exDataFetched,\r\n  exDataFetchStart,\r\n  exDataFetchError,\r\n  membersDataFetchError,\r\n  membersDataFetchStart,\r\n  membersDataFetched,\r\n  setMembersFromLocal,\r\n  setMemberToView,\r\n  reposFetched,\r\n  reposFetchError,\r\n  reposFetchStart,\r\n  setReposFromLocalMemory,\r\n  singleRepoFetched,\r\n  singleRepoFetchError,\r\n  singleRepoFetchStart,\r\n  setSortedCommunityInState,\r\n  setLoadingPercent,\r\n  setLoadingBuffered,\r\n  refreshDatafromApi,\r\n  memberDataFetchError,\r\n  authorFetched,\r\n  authorFetchError,\r\n  authorFetchStarted,\r\n} from \"./actions\";\r\nimport { filterActions, userDetailInfo, repoEvent, sortedBy, slimUser } from \"./types\";\r\n\r\nimport { getCommunity, getMember, getData, getDataSimple } from \"../DataSource/Data\";\r\n\r\nimport {\r\n  putItemToLocalStorage,\r\n  pushItemToLocalStorage,\r\n  getItemFromlocalStorage,\r\n  getMembersFromlocalStorage,\r\n  clearLocalSorage,\r\n} from \"../DataSource/LocalMemoryManager\";\r\n\r\nexport const fetchCommunityData = (dispatch: Dispatch<filterActions>, community: string) => {\r\n  dispatch(exDataFetchStart());\r\n  const localCommunity = getItemFromlocalStorage(\"community_\" + community);\r\n  return localCommunity == \"\"\r\n    ? getCommunity(community)\r\n        .then((res) => res.items as unknown as userDetailInfo[])\r\n        .then((data) => {\r\n          const reducedData = data.map((elem: slimUser) => {\r\n            return {\r\n              id: elem.id,\r\n              login: elem.login,\r\n              events_url: elem.events_url,\r\n              url: elem.url,\r\n              avatar_url: elem.avatar_url,\r\n            };\r\n          });\r\n          putItemToLocalStorage(\"community_\" + community, reducedData);\r\n          return dispatch(exDataFetched(reducedData));\r\n        })\r\n        .catch((err) => dispatch(exDataFetchError(err)))\r\n    : dispatch(exDataFetched(localCommunity));\r\n};\r\n\r\nexport const fetchRepos = (dispatch: Dispatch<filterActions>, member: userDetailInfo) => {\r\n  dispatch(reposFetchStart());\r\n\r\n  const eventsLink = member.events_url.replace(\"{/privacy}\", \"\");\r\n  getData(eventsLink, {})\r\n    .then((res) => res.items as repoEvent[])\r\n    .then((data) => dispatch(reposFetched(data, member)))\r\n    .catch((err) => dispatch(reposFetchError(err)));\r\n};\r\nexport const setMembersDetailsFromLocal = (\r\n  dispatch: Dispatch<filterActions>,\r\n  communityData: userDetailInfo[]\r\n) => {\r\n  dispatch(setMembersFromLocal(communityData));\r\n};\r\n\r\nexport const fetchRepoDetails = (dispatch: Dispatch<filterActions>, repoUrl: string) => {\r\n  dispatch(singleRepoFetchStart());\r\n  getDataSimple(repoUrl, {})\r\n    .then((res) => res.json())\r\n    .then((data) => dispatch(singleRepoFetched(data)))\r\n    .catch((err) => dispatch(singleRepoFetchError(err)));\r\n};\r\n\r\nexport const fetchReposFromLocal = (dispatch: Dispatch<filterActions>, repos: repoEvent[]) => {\r\n  console.log(\"repos from local\");\r\n  dispatch(reposFetchStart());\r\n  dispatch(setReposFromLocalMemory(repos));\r\n};\r\n\r\nexport const fetchAllMembersDetails = (\r\n  dispatch: Dispatch<filterActions>,\r\n  communityData: slimUser[],\r\n  communityName: string\r\n) => {\r\n  dispatch(membersDataFetchStart());\r\n\r\n  const parseNum = (doubtIfItsNumber: any) => {\r\n    return typeof doubtIfItsNumber == \"number\" ? doubtIfItsNumber : 0;\r\n  };\r\n  const len = communityData.length;\r\n\r\n  const elems = communityData.map((elem: slimUser, index: number) => {\r\n    const percent = Math.ceil((100 * index) / len);\r\n    //some url in dataset have {privacy} string. remove to get the data, but not sure if should respoect privacy in that case\r\n    const eventsLink = elem.events_url.replace(\"{/privacy}\", \"\");\r\n    const cachedEvents = getItemFromlocalStorage(eventsLink); ///loook for stored computed copy.\r\n    // since it takes a lot of time to compute events for user, they are cached in local storage\r\n    const noOfContributions =\r\n      parseNum(cachedEvents) > 0\r\n        ? Promise.resolve(parseNum(cachedEvents)) // for code simplicity since local and fetched data are treated\r\n        : getData(eventsLink, {})\r\n            .then((res) => {\r\n              return res.items;\r\n            })\r\n            .then((val) => {\r\n              putItemToLocalStorage(eventsLink, val.length);\r\n              return val.length;\r\n            });\r\n    return noOfContributions.then((val) => {\r\n      dispatch(setLoadingBuffered(percent));\r\n      return getMember(elem.url)\r\n        .then((res) => res.json())\r\n        .then((res: userDetailInfo) => {\r\n          res.total_contributions = val;\r\n          res.total_ReposAndGists = parseNum(res.public_repos) + parseNum(res.public_gists);\r\n          //pushing to local storage item by item avoid refetching same data which takes long for community\r\n          pushItemToLocalStorage(\"membersDetails_\" + communityName, res);\r\n          dispatch(setLoadingPercent(percent));\r\n\r\n          // console.log(\"Fetching \", percent);\r\n\r\n          return res;\r\n        });\r\n    });\r\n\r\n    /////\r\n  });\r\n\r\n  Promise.all(elems)\r\n    .then((data) => {\r\n      ///if datasets lenght are different then load from local memory which probably contains some previously interrupted dataset\r\n      const local = getMembersFromlocalStorage(communityName);\r\n      data.length > local.length //i think it will never occur\r\n        ? dispatch(membersDataFetched(data))\r\n        : dispatch(membersDataFetched(local));\r\n      ///save to localStorage to not overload Gtihub API\r\n      putItemToLocalStorage(\"memberDataCompleted_\" + communityName, true);\r\n    })\r\n    .catch((err) => dispatch(membersDataFetchError(err)));\r\n};\r\n\r\nexport const setMemberToViewDetails = (\r\n  dispatch: Dispatch<filterActions>,\r\n  member: userDetailInfo\r\n) => {\r\n  dispatch(setMemberToView(member));\r\n};\r\nexport const setSortedCommunity = (\r\n  dispatch: Dispatch<filterActions>,\r\n  sortedCommunity: userDetailInfo[],\r\n  item: sortedBy\r\n) => {\r\n  dispatch(setSortedCommunityInState(sortedCommunity, item));\r\n};\r\nexport const refreshData = (dispatch: Dispatch<filterActions>) => {\r\n  clearLocalSorage();\r\n  dispatch(refreshDatafromApi());\r\n  window.location.reload();\r\n};\r\nexport const getAuthor = (dispatch: Dispatch<filterActions>, url: string) => {\r\n  dispatch(authorFetchStarted());\r\n  return getMember(url)\r\n    .then((res) => res.json())\r\n    .then((res: userDetailInfo) => {\r\n      dispatch(authorFetched(res));\r\n\r\n      return res;\r\n    })\r\n    .catch((err) => dispatch(authorFetchError(err)));\r\n};\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { filterReducer } from \"./reducers\";\r\nimport { RootState, userDetailInfo, repoEvent, sortedBy, slimUser } from \"./types\";\r\nimport * as asyncactions from \"./async-actions\";\r\nimport { Dispatch } from \"redux\";\r\nimport { filterActions } from \"./types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst store = createStore<RootState, any, any, any>(\r\n  combineReducers({\r\n    filter: filterReducer,\r\n  })\r\n);\r\n\r\nexport default store;\r\n\r\nexport const mapStateToProps = ({ filter }: RootState) => {\r\n  return { filter };\r\n};\r\n\r\nexport const mapDispatcherToProps = (dispatch: Dispatch<filterActions>) => {\r\n  return {\r\n    fetchCommunityData: (community: string) => asyncactions.fetchCommunityData(dispatch, community),\r\n    fetchAllMembersDetails: (communityData: slimUser[], communityName: string) =>\r\n      asyncactions.fetchAllMembersDetails(dispatch, communityData, communityName),\r\n    getDatafromMemory: (communityData: userDetailInfo[]) =>\r\n      asyncactions.setMembersDetailsFromLocal(dispatch, communityData),\r\n    setMembertoDetailedView: (member: userDetailInfo) =>\r\n      asyncactions.setMemberToViewDetails(dispatch, member),\r\n    fetchRepositories: (member: userDetailInfo) => asyncactions.fetchRepos(dispatch, member),\r\n    fetchReposFromLocal: (repos: repoEvent[]) => asyncactions.fetchReposFromLocal(dispatch, repos),\r\n    setRepoToDetailedView: (repoUrl: string) => asyncactions.fetchRepoDetails(dispatch, repoUrl),\r\n    setSortedArray: (sorted: userDetailInfo[], item: sortedBy) =>\r\n      asyncactions.setSortedCommunity(dispatch, sorted, item),\r\n    refreshData: () => asyncactions.refreshData(dispatch),\r\n    getAuthor: (url: string) => asyncactions.getAuthor(dispatch, url),\r\n  };\r\n};\r\n\r\nexport type ReduxType = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatcherToProps>;\r\n\r\nexport const connectToStore = (component: any, state: any = mapStateToProps) => {\r\n  return connect(state, mapDispatcherToProps)(component);\r\n};\r\n","import { connectToStore, ReduxType } from \"../../Store/store\";\r\n\r\nimport * as types from \"../../Store/types\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Group from \"@mui/icons-material/Group\";\r\nimport ForkRightIcon from \"@mui/icons-material/ForkRight\";\r\nimport VolunteerActivismIcon from \"@mui/icons-material/VolunteerActivism\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport { JsxElement } from \"typescript\";\r\n\r\ninterface Member extends ReduxType {\r\n  userProps: types.userDetailInfo;\r\n}\r\n\r\nconst Row = (props: Member) => {\r\n  const handleClick = () => {\r\n    props.setMembertoDetailedView(props.userProps);\r\n  };\r\n  const parseNum = (doubtIfItsNumber: any) => {\r\n    return typeof doubtIfItsNumber == \"number\" ? doubtIfItsNumber : 0;\r\n  };\r\n  const reposAndGists =\r\n    parseNum(props.userProps.public_repos) + parseNum(props.userProps.public_gists);\r\n  interface memberIcons {\r\n    item: string | number | undefined;\r\n    icon: any;\r\n    tooltip: string;\r\n  }\r\n  const icons: memberIcons[] = [];\r\n\r\n  icons.push({\r\n    item: props.userProps.total_contributions,\r\n    icon: <VolunteerActivismIcon />,\r\n    tooltip: \"Total contributions\",\r\n  });\r\n  icons.push({\r\n    item: props.userProps.followers,\r\n    icon: <Group />,\r\n    tooltip: \"No. of followers\",\r\n  });\r\n  icons.push({\r\n    item: reposAndGists,\r\n    icon: <ForkRightIcon />,\r\n    tooltip: \"public repos & gists\",\r\n  });\r\n\r\n  const iconset = icons.map((elem: memberIcons, index: number) => (\r\n    <Tooltip key={index} title={elem.tooltip} arrow>\r\n      <Chip\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        icon={elem.icon}\r\n        label={props.filter.isLoading ? <Skeleton /> : elem.item}\r\n      />\r\n    </Tooltip>\r\n  ));\r\n\r\n\r\n\r\n  return Object.keys(props).length > 0 ? (\r\n    <div onClick={handleClick}>\r\n      <Card\r\n        sx={[\r\n          {\r\n            \"&:hover\": {\r\n              cursor: \"pointer\",\r\n              color: \"primary.main\",\r\n            },\r\n          },\r\n          { display: \"flex\", alignItems: \"flex-start\" },\r\n        ]}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          sx={{ height: 50, width: \"auto\" }}\r\n          image={props.userProps.avatar_url}\r\n        />\r\n\r\n        <CardContent\r\n          sx={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            padding: \"5px\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}>\r\n          <Typography component=\"div\" variant=\"subtitle2\">\r\n            {props.userProps.login}\r\n          </Typography>\r\n          <Stack direction=\"row\">{iconset}</Stack>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n};\r\n\r\nexport default connectToStore(Row);\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport MenuList from \"@mui/material/MenuList\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport RefreshOutlinedIcon from \"@mui/icons-material/RefreshOutlined\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\r\n\r\nimport { connectToStore, ReduxType } from \"../../Store/store\";\r\n\r\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\r\n\r\nconst IconMenu = (props: ReduxType) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [author, setAuthor] = React.useState({});\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleReload = () => {\r\n    props.refreshData();\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      props.getAuthor(\"https://api.github.com/users/fagalto\");\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const handleAuthor = () => {\r\n    props.filter.author !== null && props.setMembertoDetailedView(props.filter.author);\r\n    handleClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <IconButton\r\n        id=\"basic-button\"\r\n        aria-controls=\"basic-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}>\r\n        <MenuOutlinedIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}>\r\n        <MenuList>\r\n          <MenuItem onClick={handleReload}>\r\n            <ListItemIcon>\r\n              <RefreshOutlinedIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText>Reload data from Github</ListItemText>\r\n          </MenuItem>\r\n          <MenuItem onClick={handleAuthor}>\r\n            <ListItemIcon>\r\n              <InfoIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText>About</ListItemText>\r\n          </MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default connectToStore(IconMenu);\r\n","import { Stack, Typography, Chip } from \"@mui/material\";\r\nimport { connectToStore, ReduxType } from \"../../Store/store\";\r\nimport { sortedBy, userDetailInfo } from \"../../Store/types\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport DownIcon from \"@mui/icons-material/ArrowDropDownOutlined\";\r\nimport UpIcon from \"@mui/icons-material/ArrowDropUpOutlined\";\r\nimport Card from \"@mui/material/Card\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\n\r\nexport const ListHeader = (props: ReduxType) => {\r\n  const sort = {\r\n    contributions: \"total_contributions\",\r\n    followers: \"followers\",\r\n    repos: \"total_ReposAndGists\",\r\n  };\r\n  const prevSort = props.filter.sortedBy;\r\n\r\n  const handleClick = (item: string) => {\r\n    const order = prevSort.name !== item ? false : !prevSort.desc;\r\n    const sortedBy: sortedBy = { name: item, desc: order };\r\n    const ret = props.filter.data.sort(dynamicSort(item, order)) as userDetailInfo[];\r\n    props.setSortedArray(ret, sortedBy);\r\n  };\r\n\r\n  function dynamicSort(propertyName: string, descending: boolean) {\r\n    const sortOrder = descending ? 1 : -1;\r\n    return function (a: any, b: any) {\r\n      /* next line works with strings and numbers,\r\n       * and you may want to customize it to your needs\r\n       */\r\n      var result =\r\n        a[propertyName] < b[propertyName] ? -1 : a[propertyName] > b[propertyName] ? 1 : 0;\r\n      return result * sortOrder;\r\n    };\r\n  }\r\n  const barTitle = `Load member events: ${props.filter.bufferedProgress}% Loading data progress : ${props.filter.loadingProgress}% It may take few minutes`;\r\n  const progresBar = props.filter.isLoading ? (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Tooltip title={barTitle} arrow>\r\n        <LinearProgress\r\n          variant=\"buffer\"\r\n          value={props.filter.loadingProgress}\r\n          valueBuffer={props.filter.bufferedProgress}\r\n        />\r\n      </Tooltip>\r\n    </Box>\r\n  ) : null;\r\n  const sorter = Object.entries(sort).map((elem: any, key: number) => {\r\n    const icon =\r\n      elem[1] === prevSort.name ? prevSort.desc === true ? <UpIcon /> : <DownIcon /> : undefined;\r\n\r\n    return (\r\n      <Chip\r\n        onClick={() => handleClick(elem[1])}\r\n        label={elem[0]}\r\n        key={key}\r\n        icon={icon}\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <Box>\r\n      <CardContent sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <Menu />\r\n        <Typography component=\"div\" variant=\"h5\">\r\n          {props.filter.communityName} community\r\n        </Typography>\r\n      </CardContent>\r\n      {progresBar}\r\n      <Card\r\n        sx={{\r\n          display: \"flex\",\r\n          padding: \"15px\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}>\r\n        <Typography color=\"text.secondary\">Sort by </Typography>\r\n        <Box\r\n          sx={{\r\n            padding: \"15px\",\r\n            justifyContent: \"space-between\",\r\n          }}>\r\n          {sorter}\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default connectToStore(ListHeader);\r\n","import Member from \"./Member\";\r\nimport { FixedSizeList, ListChildComponentProps } from \"react-window\";\r\nimport * as types from \"../../Store/types\";\r\nimport { connectToStore, ReduxType } from \"../../Store/store\";\r\nimport Card from \"@mui/material/Card\";\r\nimport ListHeader from \"./ListHeader\";\r\n\r\n/*\r\nMembers are presented in virtualized list for cases where member arrays could be huge\r\n*/\r\n\r\nconst VirtualizedList = (props: ReduxType) => {\r\n  const renderRow = (prop: ListChildComponentProps) => {\r\n    const { index, style } = prop;\r\n    const rowData = { userProps: props.filter.data[index] };\r\n    return (\r\n      <div style={style} key={index} className=\"bigTableRow\">\r\n        <Member {...rowData} />\r\n      </div>\r\n    );\r\n  };\r\n  const len = props.filter.data.length;\r\n  return (\r\n    <Card sx={{ height: types.viewHeight * 0.95 }}>\r\n\r\n      <ListHeader />\r\n      <FixedSizeList\r\n        height={types.viewHeight * 0.7}\r\n        width={\"100%\"}\r\n        itemSize={50}\r\n        itemCount={len}\r\n        overscanCount={30}>\r\n        {renderRow}\r\n      </FixedSizeList>\r\n    </Card>\r\n  );\r\n};\r\nexport default connectToStore(VirtualizedList);\r\n","import Card from \"@mui/material/Card\";\r\n\r\nimport CardContent from \"@mui/material/CardContent\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst EmptyRepository = () => {\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          Repository Details\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          Select any of member repositories to view it's Details\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EmptyRepository;\r\n","import { GitRepo, viewHeight } from \"../../Store/types\";\r\nimport { connectToStore, ReduxType } from \"../../Store/store\";\r\nimport EmptyRepository from \"./EmptyRepository\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport ForkRightIcon from \"@mui/icons-material/ForkRight\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst RepositoryDetails = (props: ReduxType) => {\r\n  const repo = props.filter.repoDetails as GitRepo;\r\n  return Object.keys(repo).length > 0 ? (\r\n    <Card sx={{ height: viewHeight * 0.95 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 14 }} color=\"primary\" gutterBottom>\r\n          Repository Details\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          {repo.name}\r\n        </Typography>\r\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n          {repo.full_name}\r\n        </Typography>\r\n        <Typography variant=\"body2\">{repo.description}</Typography>\r\n        <Typography sx={{ fontSize: 14 }} color=\"primary\" gutterBottom>\r\n          Language\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          {repo.language}\r\n        </Typography>\r\n\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Tooltip title=\"number of repository watchers\" arrow>\r\n            <Chip icon={<PersonIcon />} label={repo.watchers} />\r\n          </Tooltip>\r\n          <Tooltip title=\"how many times repository has been forked\" arrow>\r\n            <Chip icon={<ForkRightIcon />} label={repo.forks} />\r\n          </Tooltip>\r\n        </Stack>\r\n      </CardContent>\r\n      <CardContent>\r\n        <Button size=\"small\" href={repo.html_url} color=\"primary\" variant=\"outlined\">\r\n          View Homepage\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  ) : (\r\n    <EmptyRepository />\r\n  );\r\n};\r\n\r\nexport default connectToStore(RepositoryDetails);\r\n","import { repo } from \"../../Store/types\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport { ReduxType, connectToStore } from \"../../Store/store\";\r\n\r\ninterface repositoryChip extends ReduxType {\r\n  repo: repo;\r\n}\r\n\r\nconst Repository = (props: repositoryChip) => {\r\n  const handleClick = (repositoryUrl: string) => {\r\n    props.setRepoToDetailedView(repositoryUrl);\r\n  };\r\n  return (\r\n    <Chip\r\n      size=\"small\"\r\n      label={props.repo.name}\r\n      component=\"a\"\r\n      onClick={() => handleClick(props.repo.url)}\r\n      variant=\"outlined\"\r\n      clickable\r\n    />\r\n  );\r\n};\r\nexport default connectToStore(Repository);\r\n","import * as types from \"../../Store/types\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Repository from \"../Repository/RepositoryChip\";\r\nimport Group from \"@mui/icons-material/Group\";\r\nimport ForkRightIcon from \"@mui/icons-material/ForkRight\";\r\nimport VolunteerActivismIcon from \"@mui/icons-material/VolunteerActivism\";\r\n\r\n//const data = { rows: exampleData };\r\n\r\nexport interface Member {\r\n  member: types.userDetailInfo;\r\n  repos: types.repoEvent[] | string;\r\n  reposAndGists: number;\r\n  reposAreLoading: boolean;\r\n}\r\n\r\nconst MemberComponent = (props: Member) => {\r\n  const member = props.member;\r\n\r\n  const listRepositories = (filteredRepos: types.repoEvent[]) => {\r\n    return filteredRepos.map((repo: types.repoEvent, index: number) => {\r\n      const repoProp = { repo: repo.repo };\r\n      return <Repository key={index} {...repoProp} />;\r\n    });\r\n  };\r\n\r\n  const name = props.member.name != null ? props.member.name : \"hidden\";\r\n\r\n  const repos =\r\n    typeof props.repos != \"string\" ? (\r\n      listRepositories(props.repos)\r\n    ) : (\r\n      <Box>\r\n        <Skeleton />\r\n        <Skeleton animation=\"wave\" />\r\n        <Skeleton animation={false} />\r\n      </Box>\r\n    );\r\n  //sx={{ height: types.viewHeight * 0.95 }}\r\n\r\n  return (\r\n    <Card sx={{ maxHeight: \"100%\", overflowY: \"scroll\", height: types.viewHeight * 0.95 }}>\r\n      <CardContent sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          sx={{ height: \"auto\", width: \"50%\" }}\r\n          image={member.avatar_url}\r\n        />\r\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <Typography component=\"div\" variant=\"subtitle2\" color=\"primary\">\r\n            Member:\r\n          </Typography>\r\n          <Typography component=\"div\" variant=\"h6\">\r\n            {member.login}\r\n          </Typography>\r\n          <Typography component=\"div\" variant=\"subtitle2\" color=\"primary\" noWrap>\r\n            Name:\r\n          </Typography>\r\n          <Typography component=\"div\" variant=\"h6\">\r\n            {name}\r\n          </Typography>\r\n          <Typography component=\"div\" variant=\"subtitle2\" color=\"primary\" noWrap>\r\n            Company:\r\n          </Typography>\r\n          <Typography component=\"div\" variant=\"body2\">\r\n            {member.company}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardContent>\r\n      <CardContent>\r\n        <Typography component=\"div\" variant=\"subtitle2\" color=\"primary\">\r\n          Bio:\r\n        </Typography>\r\n        <Typography component=\"div\" variant=\"body2\">\r\n          {member.bio}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardContent sx={{ flex: \"1 0 auto\" }}>\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Tooltip title=\"Total number of contributions to all repositories\" arrow>\r\n            <Chip icon={<VolunteerActivismIcon />} label={member.total_contributions} />\r\n          </Tooltip>\r\n          <Tooltip title=\"Number of followers\" arrow>\r\n            <Chip icon={<Group />} label={member.followers} />\r\n          </Tooltip>\r\n          <Tooltip title=\"Numbers of repositories and gists published by member\" arrow>\r\n            <Chip icon={<ForkRightIcon />} label={props.reposAndGists} />\r\n          </Tooltip>\r\n        </Stack>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ flex: \"1 0 auto\" }}>\r\n        <Typography component=\"div\" variant=\"h5\">\r\n          Repositories:\r\n        </Typography>\r\n        <Typography component=\"div\" variant=\"h5\">\r\n          {repos}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MemberComponent;\r\n","import { useState, useEffect } from \"react\";\r\nimport { connectToStore, ReduxType } from \"../../Store/store\";\r\nimport * as types from \"../../Store/types\";\r\nimport {\r\n  getItemFromlocalStorage,\r\n  putItemToLocalStorage,\r\n} from \"../../DataSource/LocalMemoryManager\";\r\nimport MemberComponent from \"./MemberDetailsComponent\";\r\n\r\n//const data = { rows: exampleData };\r\ninterface Member extends ReduxType {\r\n  member: types.userDetailInfo;\r\n}\r\n\r\n/*\r\nAgain, we try to fetch local data if they are already to save some time, fluency and to no overload api\r\n*/\r\n\r\nconst MemberDetails = (props: Member) => {\r\n  const member = props.member;\r\n  const [dt, setData] = useState({ repos: {}, member: \"\" });\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      const storedRepos = getItemFromlocalStorage(member.login);\r\n      storedRepos.length === 0\r\n        ? props.fetchRepositories(member)\r\n        : props.fetchReposFromLocal(storedRepos as types.repoEvent[]);\r\n      setData({ repos: props.filter.memberRepos, member: member.login });\r\n    };\r\n\r\n    fetchData();\r\n  }, [member.login]);\r\n\r\n  const parseNum = (doubtIfItsNumber: any) => {\r\n    return typeof doubtIfItsNumber == \"number\" ? doubtIfItsNumber : 0;\r\n  };\r\n  const reposAndGists =\r\n    member !== undefined ? parseNum(member.public_repos) + parseNum(member.public_gists) : 0;\r\n\r\n  const filterRepositories = (repositories: types.repoEvent[]) => {\r\n    const clearRepos = repositories.map((repo: types.repoEvent) => repo);\r\n    const unique = clearRepos.filter(\r\n      (val: types.repoEvent, index: number, array: types.repoEvent[]) => {\r\n        return (\r\n          array.findIndex((value: types.repoEvent) => {\r\n            return (\r\n              value.repo.id === val.repo.id &&\r\n              value.repo.name === val.repo.name &&\r\n              value.repo.url === val.repo.url\r\n            );\r\n          }) === index\r\n        );\r\n      }\r\n    );\r\n\r\n    return unique;\r\n  };\r\n\r\n  //Loading only distinct repos of all repos events. Also savin it to local for future reuse\r\n  const repos =\r\n    props.filter.memberRepos[member.login] !== undefined\r\n      ? filterRepositories(props.filter.memberRepos[member.login])\r\n      : \"Loading...\";\r\n  props.filter.memberRepos[member.login] !== undefined &&\r\n    putItemToLocalStorage(\r\n      member.login,{ [member.login]: filterRepositories(props.filter.memberRepos[member.login]) }\r\n    );\r\n\r\n  const memberprops = {\r\n    member: member,\r\n    repos: repos,\r\n    reposAndGists: reposAndGists,\r\n    reposAreLoading: props.filter.reposAreLoading,\r\n  };\r\n  return <MemberComponent {...memberprops} />;\r\n};\r\n\r\nexport default connectToStore(MemberDetails);\r\n","import Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst EmptyMember = () => {\r\n  return (\r\n    <Card>\r\n        <CardContent sx={{ flex: \"1 0 auto\" }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            Member Details\r\n          </Typography>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            Select any member on list to view details\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EmptyMember;\r\n","\r\nimport { connectToStore, ReduxType } from \"../../Store/store\";\r\nimport MemberDetails from \"./MemberDetails\";\r\nimport EmptyMember from \"./EmptyMember\";\r\n\r\n//const data = { rows: exampleData };\r\n\r\nconst MemberContainer = (props: ReduxType) => {\r\n  const member = props.filter.memberToView;\r\n  const prop = { member: props.filter.memberToView };\r\n  return typeof member !== \"string\" ? <MemberDetails {...prop} /> : <EmptyMember />;\r\n};\r\n\r\nexport default connectToStore(MemberContainer);\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Loader from \"./Components/Loading/Loading\";\r\nimport List from \"./Components/List/List\";\r\nimport RepositoryDetails from \"./Components/Repository/RepositoryDetails\";\r\nimport MemberContainer from \"./Components/MemberDetails/MemberContainer\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport {\r\n  getMembersFromlocalStorage,\r\n  getItemFromlocalStorage,\r\n} from \"./DataSource/LocalMemoryManager\";\r\n\r\nimport { connectToStore, ReduxType } from \"./Store/store\";\r\nimport { userDetailInfo, slimUser } from \"./Store/types\";\r\n\r\nconst View: React.FC<ReduxType> = function (props: ReduxType) {\r\n\r\n  //check if loadin data from api is required.\r\n  //cached responses length should be > 0 and equal in length to current community object\r\n  const isCompleted =\r\n    getItemFromlocalStorage(\"memberDataCompleted_\" + props.filter.communityName) == true;\r\n\r\n  const dataFromApiRequired = isCompleted !== true ? true : false;\r\n\r\n  const [dt, setData] = useState({ communityFetchStarted: false, userDetailsStarted: false });\r\n\r\n  useEffect(() => {\r\n    const fetchDataFromLocalStorage = () => {\r\n      const membersDetails = getMembersFromlocalStorage(props.filter.communityName);\r\n      props.getDatafromMemory(membersDetails);\r\n      setData({ userDetailsStarted: true, communityFetchStarted: true });\r\n    };\r\n    dataFromApiRequired === false && fetchDataFromLocalStorage();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      console.log(\"fetching community data\")\r\n      props.fetchCommunityData(props.filter.communityName);\r\n      setData({ ...dt, communityFetchStarted: true });\r\n    };\r\n    dataFromApiRequired === true && fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchUsers = () => {\r\n      if (dt.userDetailsStarted === false && props.filter.data.length > 0) {\r\n        //If stored memberData and communityData lenght are different,\r\n        // it means that loading resources from api was interupted\r\n        // so dispatch fetching data only for unmatched elements\r\n        //compare functiomn -- onlu ids are compared\r\n        const membersDetails = getMembersFromlocalStorage(props.filter.communityName);\r\n        const diff = props.filter.data.filter(\r\n          (elem: slimUser) =>\r\n            !membersDetails.some((memberElem: userDetailInfo) => elem.id === memberElem.id)\r\n        );\r\n\r\n        diff.length > 0 && props.fetchAllMembersDetails(diff, props.filter.communityName);\r\n        setData({ ...dt, userDetailsStarted: true });\r\n      }\r\n    };\r\n    dataFromApiRequired === true && fetchUsers();\r\n  });\r\n\r\n  return Object.keys(props.filter.data).length > 0 ? (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid container sx={{ paddingTop: \"20px\" }} spacing={2}>\r\n        <Grid item xs={12} md={4}>\r\n          <List />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <MemberContainer />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <RepositoryDetails />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nexport default connectToStore(View);\r\n","import { createTheme, ThemeOptions } from \"@mui/material/styles\";\r\n\r\nexport const defaultTheme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n    primary: {\r\n      main: \"#ff5722\",\r\n    },\r\n    secondary: {\r\n      main: \"#ff8a65\",\r\n    },\r\n    error: {\r\n      main: \"#2196f3\",\r\n    },\r\n    warning: {\r\n      main: \"#cddc39\",\r\n    },\r\n    info: {\r\n      main: \"#7e57c2\",\r\n    },\r\n  },\r\n});\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport View from \"./App\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport { defaultTheme } from \"./Themes/Theme\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Store/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <CssBaseline />\r\n      <View />\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}